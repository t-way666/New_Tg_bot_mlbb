import time
import os
import random
import logging
from telebot import types

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)

def get_random_media():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏–∑ –ø–∞–ø–∫–∏ start_gifs"""
    media_dir = 'media/start_gifs'  # –ò–∑–º–µ–Ω–µ–Ω –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ
    try:
        if not os.path.exists(media_dir):
            logger.error(f"–ü–∞–ø–∫–∞ {media_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return None
            
        media_files = [f for f in os.listdir(media_dir) 
                      if f.lower().endswith(('.gif', '.jpg', '.png', '.mp4'))]
        
        if not media_files:
            logger.warning(f"–í –ø–∞–ø–∫–µ {media_dir} –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤")
            return None
            
        selected_file = random.choice(media_files)
        logger.info(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {selected_file}")
        return os.path.join(media_dir, selected_file)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞: {e}")
        return None

def send_media(bot, chat_id, media_path):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞"""
    try:
        if not os.path.exists(media_path):
            logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {media_path}")
            return False

        with open(media_path, 'rb') as media_file:
            if media_path.lower().endswith('.gif'):
                bot.send_animation(chat_id, media_file)
            elif media_path.lower().endswith(('.jpg', '.png')):
                bot.send_photo(chat_id, media_file)
            elif media_path.lower().endswith('.mp4'):
                bot.send_video(chat_id, media_file, timeout=60)
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞: {e}")
        return False

def send_start(bot):
    @bot.message_handler(commands=['start'])
    def send_start_message(message):
        try:
            user_first_name = message.from_user.first_name

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row('/help', '/rank', '/my_stars')
            markup.row('/winrate_correction', '/season_progress')
            markup.row('/armor_and_resistance')

            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            greeting = (
                f"üëã –ü—Ä–∏–≤–µ—Ç, {user_first_name}!\n\n"
                "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –≤ Mobile Legends. \n"
                "–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
                
                " /start - —Å—Ç–∞—Ä—Ç/—Ä–µ—Å—Ç–∞—Ä—Ç–±–æ—Ç–∞ \n"
                " /rank - –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–Ω–≥ –ø–æ –∑–≤–µ–∑–¥–∞–º\n"
                " /my_stars - –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–≤–µ–∑–¥\n"
                " /winrate_correction - –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤–∏–Ω—Ä–µ–π—Ç–∞\n"
                " /season_progress - –°–∫–æ–ª—å–∫–æ –∏–≥—Ä –Ω—É–∂–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∂–µ–ª–∞–µ–º–æ–≥–æ —Ä–∞–Ω–≥–∞\n"
                " /armor_and_resistance - –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞—â–∏—Ç—ã –∏ —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–Ω–∞\n\n"
                
                " –ö–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ(–ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç):\n"
                " /help - –ü–æ–º–æ—â—å\n"
                " /support\n"
                " /guide\n"
                " /cybersport_info\n"
                " /chars_table\n"
                " /hero_chars\n"
                " /hero_greed\n"
                " /hero_tiers\n"
                " /search_teammates\n"
                " /img_creator\n"
            )

            bot.send_message(
                message.chat.id,
                greeting,
                reply_markup=markup,
                parse_mode='HTML'
            )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start: {e}")
            bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    return send_start_message