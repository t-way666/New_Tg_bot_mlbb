import pandas as pd
import sqlite3
import os

# Создание папки для базы данных, если она не существует
os.makedirs('db', exist_ok=True)

# Загрузка данных из CSV файла
df = pd.read_csv('db/characters.csv')

# Создание подключения к базе данных SQLite
conn = sqlite3.connect('db/characters.db')
cursor = conn.cursor()

# Создание таблицы в базе данных
cursor.execute('''
CREATE TABLE IF NOT EXISTS characters (
    "имя" TEXT,
    "убийца" BOOLEAN,
    "стрелок" BOOLEAN,
    "маг" BOOLEAN,
    "танк" BOOLEAN,
    "боец" BOOLEAN,
    "поддержка" BOOLEAN,
    "ОЗ" INTEGER,
    "прирост_ОЗ" INTEGER,
    "реген_ОЗ" REAL,
    "прирост_реген_ОЗ" REAL,
    "мана/энергия" INTEGER,
    "прирост_мана/энергия" INTEGER,
    "реген_маны/энергии" REAL,
    "прирост_реген_маны/энергии" REAL,
    "физ_атака" INTEGER,
    "прирост_физ_атака" REAL,
    "физ_защита" INTEGER,
    "прирост_физ_защита" REAL,
    "маг_защита" INTEGER,
    "прирост_маг_защита" REAL,
    "скорость_атаки" REAL,
    "прирост_скорость_атаки" REAL,
    "маг_сила" INTEGER,
    "коэффициент_скорости_атаки_%" INTEGER,
    "скорость_передвижения" INTEGER,
    "мин._дальность_базовой_атаки" REAL,
    "макс._дальность_базовой_атаки" REAL,
    "шанс_крита" INTEGER,
    "крит_урон" INTEGER,
    "сокращение_перезарядки" INTEGER,
    "физ_проникновение" INTEGER,
    "маг_проникновение" INTEGER,
    "вампиризм" INTEGER,
    "вампиризм_навыков" INTEGER,
    "устойчивость" INTEGER,
    "уменьшение_крит_урона" INTEGER,
    "эффект_лечения" INTEGER,
    "полученное_лечение" INTEGER
)
''')

# Вставка данных из DataFrame в таблицу
df.to_sql('characters', conn, if_exists='replace', index=False)

# Пример запроса для добавления новой записи
new_character = {
    "имя": 'новый_герой',
    "убийца": False,
    "стрелок": False,
    "маг": True,
    "танк": False,
    "боец": False,
    "поддержка": False,
    "ОЗ": 2500,
    "прирост_ОЗ": 150,
    "реген_ОЗ": 7.0,
    "прирост_реген_ОЗ": 0.30,
    "мана/энергия": 500,
    "прирост_мана/энергия": 100,
    "реген_маны/энергии": 4,
    "прирост_реген_маны/энергии": 0.2,
    "физ_атака": 120,
    "прирост_физ_атака": 7.0,
    "физ_защита": 15,
    "прирост_физ_защита": 4.0,
    "маг_защита": 15,
    "прирост_маг_защита": 2.5,
    "скорость_атаки": 1.0,
    "прирост_скорость_атаки": 0.01,
    "маг_сила": 0,
    "коэффициент_скорости_атаки_%": 100,
    "скорость_передвижения": 240,
    "мин._дальность_базовой_атаки": 4.5,
    "макс._дальность_базовой_атаки": 4.5,
    "шанс_крита": 0,
    "крит_урон": 200,
    "сокращение_перезарядки": 0,
    "физ_проникновение": 0,
    "маг_проникновение": 0,
    "вампиризм": 0,
    "вампиризм_навыков": 0,
    "устойчивость": 0,
    "уменьшение_крит_урона": 0,
    "эффект_лечения": 0,
    "полученное_лечение": 0
}

# Вставка новой записи в таблицу
columns = ', '.join([f'"{col}"' for col in new_character.keys()])
placeholders = ', '.join('?' * len(new_character))
sql = f'INSERT INTO characters ({columns}) VALUES ({placeholders})'
cursor.execute(sql, tuple(new_character.values()))

# Сохранение изменений и закрытие подключения
conn.commit()
conn.close()